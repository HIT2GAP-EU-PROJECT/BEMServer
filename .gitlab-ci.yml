# This CI/CD configuration provides a standard pipeline for
# * building a Docker image,
# * storing the image in the container registry,
# * running tests from a buildpack,
# * publish realease if tests succeed


stages:
  - test
  - release


  .dockerindocker: &dockerindocker
  image: docker:git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DK_IMAGE_RELEASE: "nbkinef4/bemserver:latest"
    CI_REPOSITORY_URL: https://index.docker.io/v1/
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REPOSITORY_URL


test:
  stage: test
  image: 
    name: debian:stretch
    entrypoint: ["/bin/bash"]
  variables:
    FLASK_ENV: "development"
    ONTOLOGY_BASE_URL: "http://fuseki:3030/bemserver_test"
  services:
    - name: nbkinef4/bemserver-fuseki:latest
      alias: fuseki
  script:
    - /builds/inef4digital/bemserver/scripts/bemserver.sh install development
    - /bemserver/scripts/bemserver.sh setup
    - cd /bemserver/app    
    - . /bemserver/venv/bin/activate
    - py.test --cov=bemserver --cov-report term-missing
  only:
    - development
    - master


release:
  <<: *dockerindocker
  stage: release
  script:
    - docker pull $DK_IMAGE_RELEASE
    - docker build -t $DK_IMAGE_RELEASE --cache-from $DK_IMAGE_RELEASE .
    - docker push $DK_IMAGE_RELEASE
  only:
    - master
